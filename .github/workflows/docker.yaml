name: Docker Image (Build and Push)

on:
  push:
    branches:
      - 'main'
    paths:
      - './**'
      - '.github/workflows/docker.yaml'
  pull_request:
    branches:
      - 'main'
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY_HOSTNAME: us-west1-docker.pkg.dev
  PROJECT_ID: mvp-infra
  REPOSITORY: ethereum-etl
  IMAGE: ethereum-etl
  ENV_NAME: # value is set in the step below
  GCP_WIP: projects/419142360977/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider
  GCP_SA: github-actions-service-account@mvp-infra.iam.gserviceaccount.com

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
  
    steps:
    - uses: actions/checkout@v3
    
    - id: "auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v1"
      with:
        workload_identity_provider: "${{ env.GCP_WIP }}"
        service_account: "${{ env.GCP_SA }}"

    - name: Docker configuration
      run: gcloud auth configure-docker --quiet ${{ env.REGISTRY_HOSTNAME }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=edge,pattern=latest

    - id: "build-and-push"
      name: Build Docker and Push
      uses: docker/build-push-action@v4
      with:
        cache-from: type=gha,scope=${{ env.IMAGE }}
        cache-to: type=gha,mode=max,scope=${{ env.IMAGE }}
        context: ./
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: ./Dockerfile
        push: true
        pull: true
